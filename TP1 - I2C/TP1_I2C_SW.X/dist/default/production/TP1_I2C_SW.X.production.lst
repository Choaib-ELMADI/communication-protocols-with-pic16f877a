

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Apr 11 22:44:24 2025

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13     0000                     
    14                           ; Generated 22/03/2023 GMT
    15                           ; 
    16                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48     0000                     	;# 
    49     0001                     	;# 
    50     0002                     	;# 
    51     0003                     	;# 
    52     0004                     	;# 
    53     0005                     	;# 
    54     0006                     	;# 
    55     0007                     	;# 
    56     0008                     	;# 
    57     0009                     	;# 
    58     000A                     	;# 
    59     000B                     	;# 
    60     000C                     	;# 
    61     000D                     	;# 
    62     000E                     	;# 
    63     000E                     	;# 
    64     000F                     	;# 
    65     0010                     	;# 
    66     0011                     	;# 
    67     0012                     	;# 
    68     0013                     	;# 
    69     0014                     	;# 
    70     0015                     	;# 
    71     0015                     	;# 
    72     0016                     	;# 
    73     0017                     	;# 
    74     0018                     	;# 
    75     0019                     	;# 
    76     001A                     	;# 
    77     001B                     	;# 
    78     001B                     	;# 
    79     001C                     	;# 
    80     001D                     	;# 
    81     001E                     	;# 
    82     001F                     	;# 
    83     0081                     	;# 
    84     0085                     	;# 
    85     0086                     	;# 
    86     0087                     	;# 
    87     0088                     	;# 
    88     0089                     	;# 
    89     008C                     	;# 
    90     008D                     	;# 
    91     008E                     	;# 
    92     0091                     	;# 
    93     0092                     	;# 
    94     0093                     	;# 
    95     0094                     	;# 
    96     0098                     	;# 
    97     0099                     	;# 
    98     009C                     	;# 
    99     009D                     	;# 
   100     009E                     	;# 
   101     009F                     	;# 
   102     010C                     	;# 
   103     010D                     	;# 
   104     010E                     	;# 
   105     010F                     	;# 
   106     018C                     	;# 
   107     018D                     	;# 
   108     0000                     	;# 
   109     0001                     	;# 
   110     0002                     	;# 
   111     0003                     	;# 
   112     0004                     	;# 
   113     0005                     	;# 
   114     0006                     	;# 
   115     0007                     	;# 
   116     0008                     	;# 
   117     0009                     	;# 
   118     000A                     	;# 
   119     000B                     	;# 
   120     000C                     	;# 
   121     000D                     	;# 
   122     000E                     	;# 
   123     000E                     	;# 
   124     000F                     	;# 
   125     0010                     	;# 
   126     0011                     	;# 
   127     0012                     	;# 
   128     0013                     	;# 
   129     0014                     	;# 
   130     0015                     	;# 
   131     0015                     	;# 
   132     0016                     	;# 
   133     0017                     	;# 
   134     0018                     	;# 
   135     0019                     	;# 
   136     001A                     	;# 
   137     001B                     	;# 
   138     001B                     	;# 
   139     001C                     	;# 
   140     001D                     	;# 
   141     001E                     	;# 
   142     001F                     	;# 
   143     0081                     	;# 
   144     0085                     	;# 
   145     0086                     	;# 
   146     0087                     	;# 
   147     0088                     	;# 
   148     0089                     	;# 
   149     008C                     	;# 
   150     008D                     	;# 
   151     008E                     	;# 
   152     0091                     	;# 
   153     0092                     	;# 
   154     0093                     	;# 
   155     0094                     	;# 
   156     0098                     	;# 
   157     0099                     	;# 
   158     009C                     	;# 
   159     009D                     	;# 
   160     009E                     	;# 
   161     009F                     	;# 
   162     010C                     	;# 
   163     010D                     	;# 
   164     010E                     	;# 
   165     010F                     	;# 
   166     018C                     	;# 
   167     018D                     	;# 
   168     0013                     _SSPBUF	set	19
   169     000C                     _PIR1bits	set	12
   170     0014                     _SSPCON	set	20
   171     0091                     _SSPCON2bits	set	145
   172     0093                     _SSPADD	set	147
   173     0087                     _TRISCbits	set	135
   174                           
   175                           	psect	cinit
   176     07FC                     start_initialization:	
   177                           ; #config settings
   178                           
   179     07FC                     __initialization:
   180     07FC                     end_of_initialization:	
   181                           ;End of C runtime variable initialization code
   182                           
   183     07FC                     __end_of__initialization:
   184     07FC  0183               	clrf	3
   185     07FD  120A  118A  2FCE   	ljmp	_main	;jump to C main() function
   186                           
   187                           	psect	cstackCOMMON
   188     0070                     __pcstackCOMMON:
   189     0070                     ?_I2C_Init:
   190     0070                     ?_Start_Bit:	
   191                           ; 1 bytes @ 0x0
   192                           
   193     0070                     ??_Start_Bit:	
   194                           ; 1 bytes @ 0x0
   195                           
   196     0070                     ?_Send_Byte_Data:	
   197                           ; 1 bytes @ 0x0
   198                           
   199     0070                     ??_Send_Byte_Data:	
   200                           ; 1 bytes @ 0x0
   201                           
   202     0070                     ?_Stop_Bit:	
   203                           ; 1 bytes @ 0x0
   204                           
   205     0070                     ??_Stop_Bit:	
   206                           ; 1 bytes @ 0x0
   207                           
   208     0070                     ?_main:	
   209                           ; 1 bytes @ 0x0
   210                           
   211     0070                     Send_Byte_Data@data:	
   212                           ; 1 bytes @ 0x0
   213                           
   214     0070                     I2C_Init@clock_init_value:	
   215                           ; 1 bytes @ 0x0
   216                           
   217                           
   218                           ; 2 bytes @ 0x0
   219     0070                     	ds	2
   220     0072                     ??_I2C_Init:
   221     0072                     ??_main:	
   222                           ; 1 bytes @ 0x2
   223                           
   224                           
   225                           ; 1 bytes @ 0x2
   226     0072                     	ds	3
   227                           
   228                           	psect	maintext
   229     07CE                     __pmaintext:	
   230 ;;
   231 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   232 ;;
   233 ;; *************** function _main *****************
   234 ;; Defined at:
   235 ;;		line 21 in file "main.c"
   236 ;; Parameters:    Size  Location     Type
   237 ;;		None
   238 ;; Auto vars:     Size  Location     Type
   239 ;;  clock_init_v    2    0        int 
   240 ;; Return value:  Size  Location     Type
   241 ;;                  1    wreg      void 
   242 ;; Registers used:
   243 ;;		wreg, status,2, status,0, pclath, cstack
   244 ;; Tracked objects:
   245 ;;		On entry : B00/0
   246 ;;		On exit  : 0/0
   247 ;;		Unchanged: 0/0
   248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   249 ;;      Params:         0       0       0       0       0
   250 ;;      Locals:         0       0       0       0       0
   251 ;;      Temps:          3       0       0       0       0
   252 ;;      Totals:         3       0       0       0       0
   253 ;;Total ram usage:        3 bytes
   254 ;; Hardware stack levels required when called: 2
   255 ;; This function calls:
   256 ;;		_I2C_Init
   257 ;;		_Send_Byte_Data
   258 ;;		_Start_Bit
   259 ;;		_Stop_Bit
   260 ;; This function is called by:
   261 ;;		Startup code after reset
   262 ;; This function uses a non-reentrant model
   263 ;;
   264                           
   265     07CE                     _main:	
   266                           ;psect for function _main
   267                           
   268     07CE                     l636:	
   269                           ;incstack = 0
   270                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   271                           
   272                           
   273                           ;main.c: 22:     }
   274     07CE  1683               	bsf	3,5	;RP0=1, select bank1
   275     07CF  1303               	bcf	3,6	;RP1=0, select bank1
   276     07D0  1587               	bsf	7,3	;volatile
   277                           
   278                           ;main.c: 23: 
   279     07D1  1607               	bsf	7,4	;volatile
   280     07D2                     l638:
   281     07D2                     l640:
   282                           
   283                           ;main.c: 26: 
   284     07D2  3031               	movlw	49
   285     07D3  00F0               	movwf	I2C_Init@clock_init_value
   286     07D4  3000               	movlw	0
   287     07D5  00F1               	movwf	I2C_Init@clock_init_value+1
   288     07D6  120A  118A  2799  120A  118A  	fcall	_I2C_Init
   289     07DB                     l27:	
   290                           ;main.c: 28:     SSPADD = (unsigned char)clock_init_value;
   291                           
   292                           
   293                           ;main.c: 29:     SSPCON = 0x28;
   294     07DB  120A  118A  27AD  120A  118A  	fcall	_Start_Bit
   295     07E0                     l642:
   296                           
   297                           ;main.c: 31: 
   298     07E0  30A0               	movlw	160
   299     07E1  120A  118A  27B8  120A  118A  	fcall	_Send_Byte_Data
   300     07E6                     l644:
   301                           
   302                           ;main.c: 33:     SSPCON2bits.SEN = 1;
   303     07E6  120A  118A  27A2  120A  118A  	fcall	_Stop_Bit
   304     07EB                     l646:
   305                           
   306                           ;main.c: 35:     PIR1bits.SSPIF = 0;
   307     07EB  301A               	movlw	26
   308     07EC  00F4               	movwf	??_main+2
   309     07ED  305E               	movlw	94
   310     07EE  00F3               	movwf	??_main+1
   311     07EF  306E               	movlw	110
   312     07F0  00F2               	movwf	??_main
   313     07F1                     u77:
   314     07F1  0BF2               	decfsz	??_main,f
   315     07F2  2FF1               	goto	u77
   316     07F3  0BF3               	decfsz	??_main+1,f
   317     07F4  2FF1               	goto	u77
   318     07F5  0BF4               	decfsz	??_main+2,f
   319     07F6  2FF1               	goto	u77
   320     07F7  0000               	nop
   321     07F8  2FDB               	goto	l27
   322     07F9  120A  118A  2800   	ljmp	start
   323     07FC                     __end_of_main:
   324                           
   325                           	psect	text1
   326     07AD                     __ptext1:	
   327 ;; *************** function _Start_Bit *****************
   328 ;; Defined at:
   329 ;;		line 46 in file "main.c"
   330 ;; Parameters:    Size  Location     Type
   331 ;;		None
   332 ;; Auto vars:     Size  Location     Type
   333 ;;		None
   334 ;; Return value:  Size  Location     Type
   335 ;;                  1    wreg      void 
   336 ;; Registers used:
   337 ;;		None
   338 ;; Tracked objects:
   339 ;;		On entry : 0/0
   340 ;;		On exit  : 0/0
   341 ;;		Unchanged: 0/0
   342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   343 ;;      Params:         0       0       0       0       0
   344 ;;      Locals:         0       0       0       0       0
   345 ;;      Temps:          0       0       0       0       0
   346 ;;      Totals:         0       0       0       0       0
   347 ;;Total ram usage:        0 bytes
   348 ;; Hardware stack levels used: 1
   349 ;; This function calls:
   350 ;;		Nothing
   351 ;; This function is called by:
   352 ;;		_main
   353 ;; This function uses a non-reentrant model
   354 ;;
   355                           
   356     07AD                     _Start_Bit:	
   357                           ;psect for function _Start_Bit
   358                           
   359     07AD                     l612:	
   360                           ;incstack = 0
   361                           ; Regs used in _Start_Bit: []
   362                           
   363                           
   364                           ;main.c: 47: 
   365     07AD  1683               	bsf	3,5	;RP0=1, select bank1
   366     07AE  1303               	bcf	3,6	;RP1=0, select bank1
   367     07AF  1411               	bsf	17,0	;volatile
   368     07B0                     l36:	
   369                           ;main.c: 48: void Send_ACK_Bit() {
   370                           
   371     07B0  1811               	btfsc	17,0	;volatile
   372     07B1  2FB3               	goto	u21
   373     07B2  2FB4               	goto	u20
   374     07B3                     u21:
   375     07B3  2FB0               	goto	l36
   376     07B4                     u20:
   377     07B4                     l38:
   378                           
   379                           ;main.c: 49:     SSPCON2bits.ACKEN = 1;
   380     07B4  1283               	bcf	3,5	;RP0=0, select bank0
   381     07B5  1303               	bcf	3,6	;RP1=0, select bank0
   382     07B6  118C               	bcf	12,3	;volatile
   383     07B7                     l39:
   384     07B7  0008               	return
   385     07B8                     __end_of_Start_Bit:
   386                           
   387                           	psect	text2
   388     07B8                     __ptext2:	
   389 ;; *************** function _Send_Byte_Data *****************
   390 ;; Defined at:
   391 ;;		line 52 in file "main.c"
   392 ;; Parameters:    Size  Location     Type
   393 ;;  data            1    wreg     unsigned char 
   394 ;; Auto vars:     Size  Location     Type
   395 ;;  data            1    0[COMMON] unsigned char 
   396 ;; Return value:  Size  Location     Type
   397 ;;                  1    wreg      void 
   398 ;; Registers used:
   399 ;;		wreg, status,2, status,0, pclath, cstack
   400 ;; Tracked objects:
   401 ;;		On entry : 0/0
   402 ;;		On exit  : 0/0
   403 ;;		Unchanged: 0/0
   404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   405 ;;      Params:         0       0       0       0       0
   406 ;;      Locals:         1       0       0       0       0
   407 ;;      Temps:          0       0       0       0       0
   408 ;;      Totals:         1       0       0       0       0
   409 ;;Total ram usage:        1 bytes
   410 ;; Hardware stack levels used: 1
   411 ;; Hardware stack levels required when called: 1
   412 ;; This function calls:
   413 ;;		_Stop_Bit
   414 ;; This function is called by:
   415 ;;		_main
   416 ;; This function uses a non-reentrant model
   417 ;;
   418                           
   419     07B8                     _Send_Byte_Data:	
   420                           ;psect for function _Send_Byte_Data
   421                           
   422                           
   423                           ;incstack = 0
   424                           ; Regs used in _Send_Byte_Data: [wreg+status,2+status,0+pclath+cstack]
   425                           ;Send_Byte_Data@data stored from wreg
   426     07B8  00F0               	movwf	Send_Byte_Data@data
   427     07B9                     l614:
   428                           
   429                           ;main.c: 53: 
   430     07B9  0870               	movf	Send_Byte_Data@data,w
   431     07BA  1283               	bcf	3,5	;RP0=0, select bank0
   432     07BB  1303               	bcf	3,6	;RP1=0, select bank0
   433     07BC  0093               	movwf	19	;volatile
   434     07BD                     l42:	
   435                           ;main.c: 54: void Send_NACK_Bit() {
   436                           
   437     07BD  1D8C               	btfss	12,3	;volatile
   438     07BE  2FC0               	goto	u31
   439     07BF  2FC1               	goto	u30
   440     07C0                     u31:
   441     07C0  2FBD               	goto	l42
   442     07C1                     u30:
   443     07C1                     l44:
   444                           
   445                           ;main.c: 55:     SSPCON2bits.ACKEN = 1;
   446     07C1  118C               	bcf	12,3	;volatile
   447                           
   448                           ;main.c: 57:     while (SSPCON2bits.ACKEN);
   449     07C2  1683               	bsf	3,5	;RP0=1, select bank1
   450     07C3  1303               	bcf	3,6	;RP1=0, select bank1
   451     07C4  1F11               	btfss	17,6	;volatile
   452     07C5  2FC7               	goto	u41
   453     07C6  2FC8               	goto	u40
   454     07C7                     u41:
   455     07C7  2FCD               	goto	l46
   456     07C8                     u40:
   457     07C8                     l616:
   458                           
   459                           ;main.c: 58: }
   460     07C8  120A  118A  27A2  120A  118A  	fcall	_Stop_Bit
   461     07CD                     l46:
   462     07CD  0008               	return
   463     07CE                     __end_of_Send_Byte_Data:
   464                           
   465                           	psect	text3
   466     07A2                     __ptext3:	
   467 ;; *************** function _Stop_Bit *****************
   468 ;; Defined at:
   469 ;;		line 74 in file "main.c"
   470 ;; Parameters:    Size  Location     Type
   471 ;;		None
   472 ;; Auto vars:     Size  Location     Type
   473 ;;		None
   474 ;; Return value:  Size  Location     Type
   475 ;;                  1    wreg      void 
   476 ;; Registers used:
   477 ;;		None
   478 ;; Tracked objects:
   479 ;;		On entry : 0/0
   480 ;;		On exit  : 0/0
   481 ;;		Unchanged: 0/0
   482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   483 ;;      Params:         0       0       0       0       0
   484 ;;      Locals:         0       0       0       0       0
   485 ;;      Temps:          0       0       0       0       0
   486 ;;      Totals:         0       0       0       0       0
   487 ;;Total ram usage:        0 bytes
   488 ;; Hardware stack levels used: 1
   489 ;; This function calls:
   490 ;;		Nothing
   491 ;; This function is called by:
   492 ;;		_main
   493 ;;		_Send_Byte_Data
   494 ;; This function uses a non-reentrant model
   495 ;;
   496                           
   497     07A2                     _Stop_Bit:	
   498                           ;psect for function _Stop_Bit
   499                           
   500     07A2                     l608:	
   501                           ;incstack = 0
   502                           ; Regs used in _Stop_Bit: []
   503                           
   504     07A2  1683               	bsf	3,5	;RP0=1, select bank1
   505     07A3  1303               	bcf	3,6	;RP1=0, select bank1
   506     07A4  1511               	bsf	17,2	;volatile
   507     07A5                     l61:
   508     07A5  1911               	btfsc	17,2	;volatile
   509     07A6  2FA8               	goto	u11
   510     07A7  2FA9               	goto	u10
   511     07A8                     u11:
   512     07A8  2FA5               	goto	l61
   513     07A9                     u10:
   514     07A9                     l63:
   515     07A9  1283               	bcf	3,5	;RP0=0, select bank0
   516     07AA  1303               	bcf	3,6	;RP1=0, select bank0
   517     07AB  118C               	bcf	12,3	;volatile
   518     07AC                     l64:
   519     07AC  0008               	return
   520     07AD                     __end_of_Stop_Bit:
   521                           
   522                           	psect	text4
   523     0799                     __ptext4:	
   524 ;; *************** function _I2C_Init *****************
   525 ;; Defined at:
   526 ;;		line 41 in file "main.c"
   527 ;; Parameters:    Size  Location     Type
   528 ;;  clock_init_v    2    0[COMMON] int 
   529 ;; Auto vars:     Size  Location     Type
   530 ;;		None
   531 ;; Return value:  Size  Location     Type
   532 ;;                  1    wreg      void 
   533 ;; Registers used:
   534 ;;		wreg
   535 ;; Tracked objects:
   536 ;;		On entry : 0/0
   537 ;;		On exit  : 0/0
   538 ;;		Unchanged: 0/0
   539 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   540 ;;      Params:         2       0       0       0       0
   541 ;;      Locals:         0       0       0       0       0
   542 ;;      Temps:          0       0       0       0       0
   543 ;;      Totals:         2       0       0       0       0
   544 ;;Total ram usage:        2 bytes
   545 ;; Hardware stack levels used: 1
   546 ;; This function calls:
   547 ;;		Nothing
   548 ;; This function is called by:
   549 ;;		_main
   550 ;; This function uses a non-reentrant model
   551 ;;
   552                           
   553     0799                     _I2C_Init:	
   554                           ;psect for function _I2C_Init
   555                           
   556     0799                     l634:	
   557                           ;incstack = 0
   558                           ; Regs used in _I2C_Init: [wreg]
   559                           
   560                           
   561                           ;main.c: 42: 
   562     0799  0870               	movf	I2C_Init@clock_init_value,w
   563     079A  1683               	bsf	3,5	;RP0=1, select bank1
   564     079B  1303               	bcf	3,6	;RP1=0, select bank1
   565     079C  0093               	movwf	19	;volatile
   566                           
   567                           ;main.c: 43:     if (SSPCON2bits.ACKSTAT) {
   568     079D  3028               	movlw	40
   569     079E  1283               	bcf	3,5	;RP0=0, select bank0
   570     079F  1303               	bcf	3,6	;RP1=0, select bank0
   571     07A0  0094               	movwf	20	;volatile
   572     07A1                     l33:
   573     07A1  0008               	return
   574     07A2                     __end_of_I2C_Init:
   575     007E                     btemp	set	126	;btemp
   576     007E                     wtemp0	set	126
   577                           
   578                           	psect	config
   579                           
   580                           ;Config register CONFIG @ 0x2007
   581                           ;	Oscillator Selection bits
   582                           ;	FOSC = HS, HS oscillator
   583                           ;	Watchdog Timer Enable bit
   584                           ;	WDTE = OFF, WDT disabled
   585                           ;	Power-up Timer Enable bit
   586                           ;	PWRTE = OFF, PWRT disabled
   587                           ;	Brown-out Reset Enable bit
   588                           ;	BOREN = OFF, BOR disabled
   589                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   590                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   591                           ;	Data EEPROM Memory Code Protection bit
   592                           ;	CPD = OFF, Data EEPROM code protection off
   593                           ;	Flash Program Memory Write Enable bits
   594                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   595                           ;	In-Circuit Debugger Mode bit
   596                           ;	DEBUG = 0x1, unprogrammed default
   597                           ;	Flash Program Memory Code Protection bit
   598                           ;	CP = OFF, Code protection off
   599     2007                     	org	8199
   600     2007  3FBA               	dw	16314

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_I2C_Init

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     136
                                              2 COMMON     3     3      0
                           _I2C_Init
                     _Send_Byte_Data
                          _Start_Bit
                           _Stop_Bit
 ---------------------------------------------------------------------------------
 (1) _Start_Bit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Send_Byte_Data                                       1     1      0      15
                                              0 COMMON     1     1      0
                           _Stop_Bit
 ---------------------------------------------------------------------------------
 (1) _Stop_Bit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Init                                             2     0      2      98
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Init
   _Send_Byte_Data
     _Stop_Bit
   _Start_Bit
   _Stop_Bit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Apr 11 22:44:24 2025

                      l33 07A1                        l42 07BD                        l27 07DB  
                      l44 07C1                        l36 07B0                        l61 07A5  
                      l46 07CD                        l38 07B4                        l63 07A9  
                      l39 07B7                        l64 07AC                        u10 07A9  
                      u11 07A8                        u20 07B4                        u21 07B3  
                      u30 07C1                        u31 07C0                        u40 07C8  
                      u41 07C7                        u77 07F1                       l612 07AD  
                     l614 07B9                       l608 07A2                       l616 07C8  
                     l640 07D2                       l634 0799                       l642 07E0  
                     l644 07E6                       l636 07CE                       l646 07EB  
                     l638 07D2                      _main 07CE          __end_of_I2C_Init 07A2  
                    btemp 007E                      start 0000                     ?_main 0070  
                   status 0003                     wtemp0 007E           __initialization 07FC  
            __end_of_main 07FC                    ??_main 0072          ??_Send_Byte_Data 0070  
        __end_of_Stop_Bit 07AD                    _SSPADD 0093                    _SSPCON 0014  
                  _SSPBUF 0013                 ?_I2C_Init 0070   __end_of__initialization 07FC  
          __pcstackCOMMON 0070                ??_I2C_Init 0072                __pmaintext 07CE  
       __end_of_Start_Bit 07B8                 ?_Stop_Bit 0070                ??_Stop_Bit 0070  
                 __ptext1 07AD                   __ptext2 07B8                   __ptext3 07A2  
                 __ptext4 0799  I2C_Init@clock_init_value 0070      end_of_initialization 07FC  
               _TRISCbits 0087       start_initialization 07FC                 _Start_Bit 07AD  
               ___latbits 0002                ?_Start_Bit 0070                  _I2C_Init 0799  
                _PIR1bits 000C            _Send_Byte_Data 07B8                  _Stop_Bit 07A2  
             ??_Start_Bit 0070    __end_of_Send_Byte_Data 07CE        Send_Byte_Data@data 0070  
         ?_Send_Byte_Data 0070               _SSPCON2bits 0091  
