

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Apr 23 16:26:21 2025

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	text5,local,class=CODE,merge=1,delta=2
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15     0000                     
    16                           ; Generated 22/03/2023 GMT
    17                           ; 
    18                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50     0000                     	;# 
    51     0001                     	;# 
    52     0002                     	;# 
    53     0003                     	;# 
    54     0004                     	;# 
    55     0005                     	;# 
    56     0006                     	;# 
    57     0007                     	;# 
    58     0008                     	;# 
    59     0009                     	;# 
    60     000A                     	;# 
    61     000B                     	;# 
    62     000C                     	;# 
    63     000D                     	;# 
    64     000E                     	;# 
    65     000E                     	;# 
    66     000F                     	;# 
    67     0010                     	;# 
    68     0011                     	;# 
    69     0012                     	;# 
    70     0013                     	;# 
    71     0014                     	;# 
    72     0015                     	;# 
    73     0015                     	;# 
    74     0016                     	;# 
    75     0017                     	;# 
    76     0018                     	;# 
    77     0019                     	;# 
    78     001A                     	;# 
    79     001B                     	;# 
    80     001B                     	;# 
    81     001C                     	;# 
    82     001D                     	;# 
    83     001E                     	;# 
    84     001F                     	;# 
    85     0081                     	;# 
    86     0085                     	;# 
    87     0086                     	;# 
    88     0087                     	;# 
    89     0088                     	;# 
    90     0089                     	;# 
    91     008C                     	;# 
    92     008D                     	;# 
    93     008E                     	;# 
    94     0091                     	;# 
    95     0092                     	;# 
    96     0093                     	;# 
    97     0094                     	;# 
    98     0098                     	;# 
    99     0099                     	;# 
   100     009C                     	;# 
   101     009D                     	;# 
   102     009E                     	;# 
   103     009F                     	;# 
   104     010C                     	;# 
   105     010D                     	;# 
   106     010E                     	;# 
   107     010F                     	;# 
   108     018C                     	;# 
   109     018D                     	;# 
   110     0000                     	;# 
   111     0001                     	;# 
   112     0002                     	;# 
   113     0003                     	;# 
   114     0004                     	;# 
   115     0005                     	;# 
   116     0006                     	;# 
   117     0007                     	;# 
   118     0008                     	;# 
   119     0009                     	;# 
   120     000A                     	;# 
   121     000B                     	;# 
   122     000C                     	;# 
   123     000D                     	;# 
   124     000E                     	;# 
   125     000E                     	;# 
   126     000F                     	;# 
   127     0010                     	;# 
   128     0011                     	;# 
   129     0012                     	;# 
   130     0013                     	;# 
   131     0014                     	;# 
   132     0015                     	;# 
   133     0015                     	;# 
   134     0016                     	;# 
   135     0017                     	;# 
   136     0018                     	;# 
   137     0019                     	;# 
   138     001A                     	;# 
   139     001B                     	;# 
   140     001B                     	;# 
   141     001C                     	;# 
   142     001D                     	;# 
   143     001E                     	;# 
   144     001F                     	;# 
   145     0081                     	;# 
   146     0085                     	;# 
   147     0086                     	;# 
   148     0087                     	;# 
   149     0088                     	;# 
   150     0089                     	;# 
   151     008C                     	;# 
   152     008D                     	;# 
   153     008E                     	;# 
   154     0091                     	;# 
   155     0092                     	;# 
   156     0093                     	;# 
   157     0094                     	;# 
   158     0098                     	;# 
   159     0099                     	;# 
   160     009C                     	;# 
   161     009D                     	;# 
   162     009E                     	;# 
   163     009F                     	;# 
   164     010C                     	;# 
   165     010D                     	;# 
   166     010E                     	;# 
   167     010F                     	;# 
   168     018C                     	;# 
   169     018D                     	;# 
   170     0000                     	;# 
   171     0001                     	;# 
   172     0002                     	;# 
   173     0003                     	;# 
   174     0004                     	;# 
   175     0005                     	;# 
   176     0006                     	;# 
   177     0007                     	;# 
   178     0008                     	;# 
   179     0009                     	;# 
   180     000A                     	;# 
   181     000B                     	;# 
   182     000C                     	;# 
   183     000D                     	;# 
   184     000E                     	;# 
   185     000E                     	;# 
   186     000F                     	;# 
   187     0010                     	;# 
   188     0011                     	;# 
   189     0012                     	;# 
   190     0013                     	;# 
   191     0014                     	;# 
   192     0015                     	;# 
   193     0015                     	;# 
   194     0016                     	;# 
   195     0017                     	;# 
   196     0018                     	;# 
   197     0019                     	;# 
   198     001A                     	;# 
   199     001B                     	;# 
   200     001B                     	;# 
   201     001C                     	;# 
   202     001D                     	;# 
   203     001E                     	;# 
   204     001F                     	;# 
   205     0081                     	;# 
   206     0085                     	;# 
   207     0086                     	;# 
   208     0087                     	;# 
   209     0088                     	;# 
   210     0089                     	;# 
   211     008C                     	;# 
   212     008D                     	;# 
   213     008E                     	;# 
   214     0091                     	;# 
   215     0092                     	;# 
   216     0093                     	;# 
   217     0094                     	;# 
   218     0098                     	;# 
   219     0099                     	;# 
   220     009C                     	;# 
   221     009D                     	;# 
   222     009E                     	;# 
   223     009F                     	;# 
   224     010C                     	;# 
   225     010D                     	;# 
   226     010E                     	;# 
   227     010F                     	;# 
   228     018C                     	;# 
   229     018D                     	;# 
   230     0000                     	;# 
   231     0001                     	;# 
   232     0002                     	;# 
   233     0003                     	;# 
   234     0004                     	;# 
   235     0005                     	;# 
   236     0006                     	;# 
   237     0007                     	;# 
   238     0008                     	;# 
   239     0009                     	;# 
   240     000A                     	;# 
   241     000B                     	;# 
   242     000C                     	;# 
   243     000D                     	;# 
   244     000E                     	;# 
   245     000E                     	;# 
   246     000F                     	;# 
   247     0010                     	;# 
   248     0011                     	;# 
   249     0012                     	;# 
   250     0013                     	;# 
   251     0014                     	;# 
   252     0015                     	;# 
   253     0015                     	;# 
   254     0016                     	;# 
   255     0017                     	;# 
   256     0018                     	;# 
   257     0019                     	;# 
   258     001A                     	;# 
   259     001B                     	;# 
   260     001B                     	;# 
   261     001C                     	;# 
   262     001D                     	;# 
   263     001E                     	;# 
   264     001F                     	;# 
   265     0081                     	;# 
   266     0085                     	;# 
   267     0086                     	;# 
   268     0087                     	;# 
   269     0088                     	;# 
   270     0089                     	;# 
   271     008C                     	;# 
   272     008D                     	;# 
   273     008E                     	;# 
   274     0091                     	;# 
   275     0092                     	;# 
   276     0093                     	;# 
   277     0094                     	;# 
   278     0098                     	;# 
   279     0099                     	;# 
   280     009C                     	;# 
   281     009D                     	;# 
   282     009E                     	;# 
   283     009F                     	;# 
   284     010C                     	;# 
   285     010D                     	;# 
   286     010E                     	;# 
   287     010F                     	;# 
   288     018C                     	;# 
   289     018D                     	;# 
   290     000C                     _PIR1bits	set	12
   291     0013                     _SSPBUF	set	19
   292     0014                     _SSPCON	set	20
   293     0008                     _PORTD	set	8
   294     0007                     _PORTCbits	set	7
   295     0094                     _SSPSTATbits	set	148
   296     0094                     _SSPSTAT	set	148
   297     0088                     _TRISD	set	136
   298     0087                     _TRISCbits	set	135
   299                           
   300                           	psect	cinit
   301     07FA                     start_initialization:	
   302                           ; #config settings
   303                           
   304     07FA                     __initialization:
   305                           
   306                           ; Clear objects allocated to COMMON
   307     07FA  01F7               	clrf	__pbssCOMMON& (0+127)
   308     07FB  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   309     07FC                     end_of_initialization:	
   310                           ;End of C runtime variable initialization code
   311                           
   312     07FC                     __end_of__initialization:
   313     07FC  0183               	clrf	3
   314     07FD  120A  118A  2FA3   	ljmp	_main	;jump to C main() function
   315                           
   316                           	psect	bssCOMMON
   317     0077                     __pbssCOMMON:
   318     0077                     _data_read:
   319     0077                     	ds	1
   320     0078                     _data:
   321     0078                     	ds	1
   322                           
   323                           	psect	cstackCOMMON
   324     0070                     __pcstackCOMMON:
   325     0070                     ?_SPI_Init:
   326     0070                     ??_SPI_Init:	
   327                           ; 1 bytes @ 0x0
   328                           
   329     0070                     ?_main:	
   330                           ; 1 bytes @ 0x0
   331                           
   332     0070                     ?_SPI_Write_Data:	
   333                           ; 1 bytes @ 0x0
   334                           
   335     0070                     ??_SPI_Write_Data:	
   336                           ; 1 bytes @ 0x0
   337                           
   338     0070                     ?_SPI_Read_Data:	
   339                           ; 1 bytes @ 0x0
   340                           
   341     0070                     ??_SPI_Read_Data:	
   342                           ; 1 bytes @ 0x0
   343                           
   344     0070                     SPI_Write_Data@data:	
   345                           ; 1 bytes @ 0x0
   346                           
   347                           
   348                           ; 1 bytes @ 0x0
   349     0070                     	ds	1
   350     0071                     ?_Write_Byte_25AA256:
   351     0071                     ?_Read_Byte_25AA256:	
   352                           ; 1 bytes @ 0x1
   353                           
   354     0071                     Write_Byte_25AA256@ADS_L:	
   355                           ; 1 bytes @ 0x1
   356                           
   357     0071                     Read_Byte_25AA256@ADS_L:	
   358                           ; 1 bytes @ 0x1
   359                           
   360                           
   361                           ; 1 bytes @ 0x1
   362     0071                     	ds	1
   363     0072                     ??_Read_Byte_25AA256:
   364     0072                     Write_Byte_25AA256@data:	
   365                           ; 1 bytes @ 0x2
   366                           
   367     0072                     Read_Byte_25AA256@ADS_H:	
   368                           ; 1 bytes @ 0x2
   369                           
   370                           
   371                           ; 1 bytes @ 0x2
   372     0072                     	ds	1
   373     0073                     ??_Write_Byte_25AA256:
   374     0073                     Write_Byte_25AA256@ADS_H:	
   375                           ; 1 bytes @ 0x3
   376                           
   377                           
   378                           ; 1 bytes @ 0x3
   379     0073                     	ds	1
   380     0074                     ??_main:
   381                           
   382                           ; 1 bytes @ 0x4
   383     0074                     	ds	3
   384                           
   385                           	psect	maintext
   386     07A3                     __pmaintext:	
   387 ;;
   388 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   389 ;;
   390 ;; *************** function _main *****************
   391 ;; Defined at:
   392 ;;		line 21 in file "main.c"
   393 ;; Parameters:    Size  Location     Type
   394 ;;		None
   395 ;; Auto vars:     Size  Location     Type
   396 ;;		None
   397 ;; Return value:  Size  Location     Type
   398 ;;                  1    wreg      void 
   399 ;; Registers used:
   400 ;;		wreg, status,2, status,0, pclath, cstack
   401 ;; Tracked objects:
   402 ;;		On entry : B00/0
   403 ;;		On exit  : 0/0
   404 ;;		Unchanged: 0/0
   405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   406 ;;      Params:         0       0       0       0       0
   407 ;;      Locals:         0       0       0       0       0
   408 ;;      Temps:          3       0       0       0       0
   409 ;;      Totals:         3       0       0       0       0
   410 ;;Total ram usage:        3 bytes
   411 ;; Hardware stack levels required when called: 2
   412 ;; This function calls:
   413 ;;		_Read_Byte_25AA256
   414 ;;		_SPI_Init
   415 ;;		_Write_Byte_25AA256
   416 ;; This function is called by:
   417 ;;		Startup code after reset
   418 ;; This function uses a non-reentrant model
   419 ;;
   420                           
   421     07A3                     _main:	
   422                           ;psect for function _main
   423                           
   424     07A3                     l669:	
   425                           ;incstack = 0
   426                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   427                           
   428                           
   429                           ;main.c: 22:         data_read = Read_Byte_25AA256(0x25, 0x50);
   430     07A3  1683               	bsf	3,5	;RP0=1, select bank1
   431     07A4  1303               	bcf	3,6	;RP1=0, select bank1
   432     07A5  1187               	bcf	7,3	;volatile
   433                           
   434                           ;main.c: 23:         PORTCbits.RC7 = 1;
   435     07A6  1607               	bsf	7,4	;volatile
   436                           
   437                           ;main.c: 24:         _delay((unsigned long)((3000)*(20000000/4000.0)));
   438     07A7  1287               	bcf	7,5	;volatile
   439                           
   440                           ;main.c: 25:     }
   441     07A8  1387               	bcf	7,7	;volatile
   442     07A9                     l671:
   443                           
   444                           ;main.c: 26: }
   445     07A9  30FF               	movlw	255
   446     07AA  0088               	movwf	8	;volatile
   447     07AB                     l673:
   448     07AB  120A  118A  274D  120A  118A  	fcall	_SPI_Init
   449     07B0                     l675:
   450     07B0  301A               	movlw	26
   451     07B1  00F6               	movwf	??_main+2
   452     07B2  305E               	movlw	94
   453     07B3  00F5               	movwf	??_main+1
   454     07B4  306E               	movlw	110
   455     07B5  00F4               	movwf	??_main
   456     07B6                     u47:
   457     07B6  0BF4               	decfsz	??_main,f
   458     07B7  2FB6               	goto	u47
   459     07B8  0BF5               	decfsz	??_main+1,f
   460     07B9  2FB6               	goto	u47
   461     07BA  0BF6               	decfsz	??_main+2,f
   462     07BB  2FB6               	goto	u47
   463     07BC  0000               	nop
   464     07BD                     l677:
   465     07BD  1283               	bcf	3,5	;RP0=0, select bank0
   466     07BE  1303               	bcf	3,6	;RP1=0, select bank0
   467     07BF  1387               	bcf	7,7	;volatile
   468     07C0  3050               	movlw	80
   469     07C1  00F1               	movwf	Write_Byte_25AA256@ADS_L
   470     07C2  0808               	movf	8,w	;volatile
   471     07C3  00F2               	movwf	Write_Byte_25AA256@data
   472     07C4  3025               	movlw	37
   473     07C5  120A  118A  276E  120A  118A  	fcall	_Write_Byte_25AA256
   474     07CA                     l679:
   475     07CA  1283               	bcf	3,5	;RP0=0, select bank0
   476     07CB  1303               	bcf	3,6	;RP1=0, select bank0
   477     07CC  1787               	bsf	7,7	;volatile
   478     07CD                     l681:
   479     07CD  301A               	movlw	26
   480     07CE  00F6               	movwf	??_main+2
   481     07CF  305E               	movlw	94
   482     07D0  00F5               	movwf	??_main+1
   483     07D1  306E               	movlw	110
   484     07D2  00F4               	movwf	??_main
   485     07D3                     u57:
   486     07D3  0BF4               	decfsz	??_main,f
   487     07D4  2FD3               	goto	u57
   488     07D5  0BF5               	decfsz	??_main+1,f
   489     07D6  2FD3               	goto	u57
   490     07D7  0BF6               	decfsz	??_main+2,f
   491     07D8  2FD3               	goto	u57
   492     07D9  0000               	nop
   493     07DA                     l683:
   494     07DA  1283               	bcf	3,5	;RP0=0, select bank0
   495     07DB  1303               	bcf	3,6	;RP1=0, select bank0
   496     07DC  1387               	bcf	7,7	;volatile
   497     07DD                     l685:
   498     07DD  3050               	movlw	80
   499     07DE  00F1               	movwf	Read_Byte_25AA256@ADS_L
   500     07DF  3025               	movlw	37
   501     07E0  120A  118A  2788  120A  118A  	fcall	_Read_Byte_25AA256
   502     07E5  00F7               	movwf	_data_read
   503     07E6                     l687:
   504     07E6  1283               	bcf	3,5	;RP0=0, select bank0
   505     07E7  1303               	bcf	3,6	;RP1=0, select bank0
   506     07E8  1787               	bsf	7,7	;volatile
   507     07E9  304D               	movlw	77
   508     07EA  00F6               	movwf	??_main+2
   509     07EB  3019               	movlw	25
   510     07EC  00F5               	movwf	??_main+1
   511     07ED  304F               	movlw	79
   512     07EE  00F4               	movwf	??_main
   513     07EF                     u67:
   514     07EF  0BF4               	decfsz	??_main,f
   515     07F0  2FEF               	goto	u67
   516     07F1  0BF5               	decfsz	??_main+1,f
   517     07F2  2FEF               	goto	u67
   518     07F3  0BF6               	decfsz	??_main+2,f
   519     07F4  2FEF               	goto	u67
   520     07F5  2FF6               	nop2
   521     07F6  2FBD               	goto	l677
   522     07F7  120A  118A  2800   	ljmp	start
   523     07FA                     __end_of_main:
   524                           
   525                           	psect	text1
   526     076E                     __ptext1:	
   527 ;; *************** function _Write_Byte_25AA256 *****************
   528 ;; Defined at:
   529 ;;		line 3 in file "MEM_Functions.c"
   530 ;; Parameters:    Size  Location     Type
   531 ;;  ADS_H           1    wreg     unsigned char 
   532 ;;  ADS_L           1    1[COMMON] unsigned char 
   533 ;;  data            1    2[COMMON] unsigned char 
   534 ;; Auto vars:     Size  Location     Type
   535 ;;  ADS_H           1    3[COMMON] unsigned char 
   536 ;; Return value:  Size  Location     Type
   537 ;;                  1    wreg      void 
   538 ;; Registers used:
   539 ;;		wreg, status,2, status,0, pclath, cstack
   540 ;; Tracked objects:
   541 ;;		On entry : 0/0
   542 ;;		On exit  : 0/0
   543 ;;		Unchanged: 0/0
   544 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   545 ;;      Params:         2       0       0       0       0
   546 ;;      Locals:         1       0       0       0       0
   547 ;;      Temps:          0       0       0       0       0
   548 ;;      Totals:         3       0       0       0       0
   549 ;;Total ram usage:        3 bytes
   550 ;; Hardware stack levels used: 1
   551 ;; Hardware stack levels required when called: 1
   552 ;; This function calls:
   553 ;;		_SPI_Write_Data
   554 ;; This function is called by:
   555 ;;		_main
   556 ;; This function uses a non-reentrant model
   557 ;;
   558                           
   559     076E                     _Write_Byte_25AA256:	
   560                           ;psect for function _Write_Byte_25AA256
   561                           
   562                           
   563                           ;incstack = 0
   564                           ; Regs used in _Write_Byte_25AA256: [wreg+status,2+status,0+pclath+cstack]
   565                           ;Write_Byte_25AA256@ADS_H stored from wreg
   566     076E  00F3               	movwf	Write_Byte_25AA256@ADS_H
   567     076F                     l659:
   568                           
   569                           ;MEM_Functions.c: 4:     SPI_Write_Data(0x02);
   570     076F  3002               	movlw	2
   571     0770  120A  118A  2755  120A  118A  	fcall	_SPI_Write_Data
   572                           
   573                           ;MEM_Functions.c: 5:     SPI_Write_Data(ADS_H);
   574     0775  0873               	movf	Write_Byte_25AA256@ADS_H,w
   575     0776  120A  118A  2755  120A  118A  	fcall	_SPI_Write_Data
   576                           
   577                           ;MEM_Functions.c: 6:     SPI_Write_Data(ADS_L);
   578     077B  0871               	movf	Write_Byte_25AA256@ADS_L,w
   579     077C  120A  118A  2755  120A  118A  	fcall	_SPI_Write_Data
   580                           
   581                           ;MEM_Functions.c: 7:     SPI_Write_Data(data);
   582     0781  0872               	movf	Write_Byte_25AA256@data,w
   583     0782  120A  118A  2755  120A  118A  	fcall	_SPI_Write_Data
   584     0787                     l68:
   585     0787  0008               	return
   586     0788                     __end_of_Write_Byte_25AA256:
   587                           
   588                           	psect	text2
   589     074D                     __ptext2:	
   590 ;; *************** function _SPI_Init *****************
   591 ;; Defined at:
   592 ;;		line 3 in file "SPI_Functions.c"
   593 ;; Parameters:    Size  Location     Type
   594 ;;		None
   595 ;; Auto vars:     Size  Location     Type
   596 ;;		None
   597 ;; Return value:  Size  Location     Type
   598 ;;                  1    wreg      void 
   599 ;; Registers used:
   600 ;;		wreg, status,2
   601 ;; Tracked objects:
   602 ;;		On entry : 0/0
   603 ;;		On exit  : 0/0
   604 ;;		Unchanged: 0/0
   605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   606 ;;      Params:         0       0       0       0       0
   607 ;;      Locals:         0       0       0       0       0
   608 ;;      Temps:          0       0       0       0       0
   609 ;;      Totals:         0       0       0       0       0
   610 ;;Total ram usage:        0 bytes
   611 ;; Hardware stack levels used: 1
   612 ;; This function calls:
   613 ;;		Nothing
   614 ;; This function is called by:
   615 ;;		_main
   616 ;; This function uses a non-reentrant model
   617 ;;
   618                           
   619     074D                     _SPI_Init:	
   620                           ;psect for function _SPI_Init
   621                           
   622     074D                     l623:	
   623                           ;incstack = 0
   624                           ; Regs used in _SPI_Init: [wreg+status,2]
   625                           
   626                           
   627                           ;SPI_Functions.c: 4:     SSPCON = 0x20;
   628     074D  3020               	movlw	32
   629     074E  1283               	bcf	3,5	;RP0=0, select bank0
   630     074F  1303               	bcf	3,6	;RP1=0, select bank0
   631     0750  0094               	movwf	20	;volatile
   632     0751                     l625:
   633                           
   634                           ;SPI_Functions.c: 5:     SSPSTAT = 0x00;
   635     0751  1683               	bsf	3,5	;RP0=1, select bank1
   636     0752  1303               	bcf	3,6	;RP1=0, select bank1
   637     0753  0194               	clrf	20	;volatile
   638     0754                     l41:
   639     0754  0008               	return
   640     0755                     __end_of_SPI_Init:
   641                           
   642                           	psect	text3
   643     0788                     __ptext3:	
   644 ;; *************** function _Read_Byte_25AA256 *****************
   645 ;; Defined at:
   646 ;;		line 10 in file "MEM_Functions.c"
   647 ;; Parameters:    Size  Location     Type
   648 ;;  ADS_H           1    wreg     unsigned char 
   649 ;;  ADS_L           1    1[COMMON] unsigned char 
   650 ;; Auto vars:     Size  Location     Type
   651 ;;  ADS_H           1    2[COMMON] unsigned char 
   652 ;; Return value:  Size  Location     Type
   653 ;;                  1    wreg      unsigned char 
   654 ;; Registers used:
   655 ;;		wreg, status,2, status,0, pclath, cstack
   656 ;; Tracked objects:
   657 ;;		On entry : 0/0
   658 ;;		On exit  : 0/0
   659 ;;		Unchanged: 0/0
   660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   661 ;;      Params:         1       0       0       0       0
   662 ;;      Locals:         1       0       0       0       0
   663 ;;      Temps:          0       0       0       0       0
   664 ;;      Totals:         2       0       0       0       0
   665 ;;Total ram usage:        2 bytes
   666 ;; Hardware stack levels used: 1
   667 ;; Hardware stack levels required when called: 1
   668 ;; This function calls:
   669 ;;		_SPI_Read_Data
   670 ;;		_SPI_Write_Data
   671 ;; This function is called by:
   672 ;;		_main
   673 ;; This function uses a non-reentrant model
   674 ;;
   675                           
   676     0788                     _Read_Byte_25AA256:	
   677                           ;psect for function _Read_Byte_25AA256
   678                           
   679                           
   680                           ;incstack = 0
   681                           ; Regs used in _Read_Byte_25AA256: [wreg+status,2+status,0+pclath+cstack]
   682                           ;Read_Byte_25AA256@ADS_H stored from wreg
   683     0788  00F2               	movwf	Read_Byte_25AA256@ADS_H
   684     0789                     l661:
   685                           
   686                           ;MEM_Functions.c: 11:     SPI_Write_Data(0x03);
   687     0789  3003               	movlw	3
   688     078A  120A  118A  2755  120A  118A  	fcall	_SPI_Write_Data
   689                           
   690                           ;MEM_Functions.c: 12:     SPI_Write_Data(ADS_H);
   691     078F  0872               	movf	Read_Byte_25AA256@ADS_H,w
   692     0790  120A  118A  2755  120A  118A  	fcall	_SPI_Write_Data
   693                           
   694                           ;MEM_Functions.c: 13:     SPI_Write_Data(ADS_L);
   695     0795  0871               	movf	Read_Byte_25AA256@ADS_L,w
   696     0796  120A  118A  2755  120A  118A  	fcall	_SPI_Write_Data
   697     079B                     l663:
   698                           
   699                           ;MEM_Functions.c: 14:     data = SPI_Read_Data();
   700     079B  120A  118A  2760  120A  118A  	fcall	_SPI_Read_Data
   701     07A0  00F8               	movwf	_data
   702     07A1                     l665:
   703                           
   704                           ;MEM_Functions.c: 16:     return data;
   705     07A1  0878               	movf	_data,w
   706     07A2                     l71:
   707     07A2  0008               	return
   708     07A3                     __end_of_Read_Byte_25AA256:
   709                           
   710                           	psect	text4
   711     0755                     __ptext4:	
   712 ;; *************** function _SPI_Write_Data *****************
   713 ;; Defined at:
   714 ;;		line 14 in file "SPI_Functions.c"
   715 ;; Parameters:    Size  Location     Type
   716 ;;  data            1    wreg     unsigned char 
   717 ;; Auto vars:     Size  Location     Type
   718 ;;  data            1    0[COMMON] unsigned char 
   719 ;; Return value:  Size  Location     Type
   720 ;;                  1    wreg      void 
   721 ;; Registers used:
   722 ;;		wreg
   723 ;; Tracked objects:
   724 ;;		On entry : 0/0
   725 ;;		On exit  : 0/0
   726 ;;		Unchanged: 0/0
   727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   728 ;;      Params:         0       0       0       0       0
   729 ;;      Locals:         1       0       0       0       0
   730 ;;      Temps:          0       0       0       0       0
   731 ;;      Totals:         1       0       0       0       0
   732 ;;Total ram usage:        1 bytes
   733 ;; Hardware stack levels used: 1
   734 ;; This function calls:
   735 ;;		Nothing
   736 ;; This function is called by:
   737 ;;		_Write_Byte_25AA256
   738 ;;		_Read_Byte_25AA256
   739 ;; This function uses a non-reentrant model
   740 ;;
   741                           
   742     0755                     _SPI_Write_Data:	
   743                           ;psect for function _SPI_Write_Data
   744                           
   745                           
   746                           ;incstack = 0
   747                           ; Regs used in _SPI_Write_Data: [wreg]
   748                           ;SPI_Write_Data@data stored from wreg
   749     0755  00F0               	movwf	SPI_Write_Data@data
   750     0756                     l615:
   751                           
   752                           ;SPI_Functions.c: 15:     SSPBUF = data;
   753     0756  0870               	movf	SPI_Write_Data@data,w
   754     0757  1283               	bcf	3,5	;RP0=0, select bank0
   755     0758  1303               	bcf	3,6	;RP1=0, select bank0
   756     0759  0093               	movwf	19	;volatile
   757     075A                     l50:	
   758                           ;SPI_Functions.c: 16:     while (!PIR1bits.SSPIF);
   759                           
   760     075A  1D8C               	btfss	12,3	;volatile
   761     075B  2F5D               	goto	u11
   762     075C  2F5E               	goto	u10
   763     075D                     u11:
   764     075D  2F5A               	goto	l50
   765     075E                     u10:
   766     075E                     l52:
   767                           
   768                           ;SPI_Functions.c: 17:     PIR1bits.SSPIF = 0;
   769     075E  118C               	bcf	12,3	;volatile
   770     075F                     l53:
   771     075F  0008               	return
   772     0760                     __end_of_SPI_Write_Data:
   773                           
   774                           	psect	text5
   775     0760                     __ptext5:	
   776 ;; *************** function _SPI_Read_Data *****************
   777 ;; Defined at:
   778 ;;		line 20 in file "SPI_Functions.c"
   779 ;; Parameters:    Size  Location     Type
   780 ;;		None
   781 ;; Auto vars:     Size  Location     Type
   782 ;;		None
   783 ;; Return value:  Size  Location     Type
   784 ;;                  1    wreg      unsigned char 
   785 ;; Registers used:
   786 ;;		wreg, status,2
   787 ;; Tracked objects:
   788 ;;		On entry : 0/0
   789 ;;		On exit  : 0/0
   790 ;;		Unchanged: 0/0
   791 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   792 ;;      Params:         0       0       0       0       0
   793 ;;      Locals:         0       0       0       0       0
   794 ;;      Temps:          0       0       0       0       0
   795 ;;      Totals:         0       0       0       0       0
   796 ;;Total ram usage:        0 bytes
   797 ;; Hardware stack levels used: 1
   798 ;; This function calls:
   799 ;;		Nothing
   800 ;; This function is called by:
   801 ;;		_Read_Byte_25AA256
   802 ;; This function uses a non-reentrant model
   803 ;;
   804                           
   805     0760                     _SPI_Read_Data:	
   806                           ;psect for function _SPI_Read_Data
   807                           
   808     0760                     l617:	
   809                           ;incstack = 0
   810                           ; Regs used in _SPI_Read_Data: [wreg+status,2]
   811                           
   812                           
   813                           ;SPI_Functions.c: 21:     SSPBUF = 0x00;
   814     0760  1283               	bcf	3,5	;RP0=0, select bank0
   815     0761  1303               	bcf	3,6	;RP1=0, select bank0
   816     0762  0193               	clrf	19	;volatile
   817     0763                     l56:	
   818                           ;SPI_Functions.c: 22:     while (!SSPSTATbits.BF);
   819                           
   820     0763  1683               	bsf	3,5	;RP0=1, select bank1
   821     0764  1303               	bcf	3,6	;RP1=0, select bank1
   822     0765  1C14               	btfss	20,0	;volatile
   823     0766  2F68               	goto	u21
   824     0767  2F69               	goto	u20
   825     0768                     u21:
   826     0768  2F63               	goto	l56
   827     0769                     u20:
   828     0769                     l58:
   829                           
   830                           ;SPI_Functions.c: 24:     SSPSTATbits.BF = 0;
   831     0769  1014               	bcf	20,0	;volatile
   832     076A                     l619:
   833                           
   834                           ;SPI_Functions.c: 25:     return SSPBUF;
   835     076A  1283               	bcf	3,5	;RP0=0, select bank0
   836     076B  1303               	bcf	3,6	;RP1=0, select bank0
   837     076C  0813               	movf	19,w	;volatile
   838     076D                     l59:
   839     076D  0008               	return
   840     076E                     __end_of_SPI_Read_Data:
   841     007E                     btemp	set	126	;btemp
   842     007E                     wtemp0	set	126
   843                           
   844                           	psect	config
   845                           
   846                           ;Config register CONFIG @ 0x2007
   847                           ;	Oscillator Selection bits
   848                           ;	FOSC = HS, HS oscillator
   849                           ;	Watchdog Timer Enable bit
   850                           ;	WDTE = OFF, WDT disabled
   851                           ;	Power-up Timer Enable bit
   852                           ;	PWRTE = OFF, PWRT disabled
   853                           ;	Brown-out Reset Enable bit
   854                           ;	BOREN = OFF, BOR disabled
   855                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   856                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   857                           ;	Data EEPROM Memory Code Protection bit
   858                           ;	CPD = OFF, Data EEPROM code protection off
   859                           ;	Flash Program Memory Write Enable bits
   860                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   861                           ;	In-Circuit Debugger Mode bit
   862                           ;	DEBUG = 0x1, unprogrammed default
   863                           ;	Flash Program Memory Code Protection bit
   864                           ;	CP = OFF, Code protection off
   865     2007                     	org	8199
   866     2007  3FBA               	dw	16314

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_Write_Byte_25AA256
    _Write_Byte_25AA256->_SPI_Write_Data
    _Read_Byte_25AA256->_SPI_Write_Data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     368
                                              4 COMMON     3     3      0
                  _Read_Byte_25AA256
                           _SPI_Init
                 _Write_Byte_25AA256
 ---------------------------------------------------------------------------------
 (1) _Write_Byte_25AA256                                   3     1      2     233
                                              1 COMMON     3     1      2
                     _SPI_Write_Data
 ---------------------------------------------------------------------------------
 (1) _SPI_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Read_Byte_25AA256                                    2     1      1     135
                                              1 COMMON     2     1      1
                      _SPI_Read_Data
                     _SPI_Write_Data
 ---------------------------------------------------------------------------------
 (2) _SPI_Write_Data                                       1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _SPI_Read_Data                                        0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Read_Byte_25AA256
     _SPI_Read_Data
     _SPI_Write_Data
   _SPI_Init
   _Write_Byte_25AA256
     _SPI_Write_Data

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       9       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       9      12        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Apr 23 16:26:21 2025

               _SSPSTATbits 0094                          l41 0754                          l50 075A  
                        l52 075E                          l53 075F                          l71 07A2  
                        l56 0763                          l58 0769                          l59 076D  
                        l68 0787                          u10 075E                          u11 075D  
                        u20 0769                          u21 0768                          u47 07B6  
                        u57 07D3                          u67 07EF                         l615 0756  
                       l623 074D                         l617 0760                         l625 0751  
                       l619 076A                         l661 0789                         l663 079B  
                       l671 07A9                         l665 07A1                         l681 07CD  
                       l673 07AB                         l659 076F                         l683 07DA  
                       l675 07B0                         l685 07DD                         l677 07BD  
                       l669 07A3                         l687 07E6                         l679 07CA  
                      _data 0078                        _main 07A3                        btemp 007E  
                      start 0000              ?_SPI_Read_Data 0070                       ?_main 0070  
                     _PORTD 0008                       _TRISD 0088          _Write_Byte_25AA256 076E  
          __end_of_SPI_Init 0755         ?_Write_Byte_25AA256 0071      Read_Byte_25AA256@ADS_H 0072  
    Read_Byte_25AA256@ADS_L 0071                       status 0003                       wtemp0 007E  
            _SPI_Write_Data 0755             __initialization 07FA                __end_of_main 07FA  
      ??_Write_Byte_25AA256 0073                      ??_main 0074             ??_SPI_Read_Data 0070  
                    _SSPCON 0014                      _SSPBUF 0013      __end_of_SPI_Write_Data 0760  
   __end_of__initialization 07FC             ?_SPI_Write_Data 0070              __pcstackCOMMON 0070  
                 ?_SPI_Init 0070                  __pmaintext 07A3                  ??_SPI_Init 0070  
                   _SSPSTAT 0094                     __ptext1 076E                     __ptext2 074D  
                   __ptext3 0788                     __ptext4 0755                     __ptext5 0760  
      end_of_initialization 07FC      Write_Byte_25AA256@data 0072                   _PORTCbits 0007  
                 _TRISCbits 0087            ??_SPI_Write_Data 0070       __end_of_SPI_Read_Data 076E  
       start_initialization 07FA                 __pbssCOMMON 0077                   ___latbits 0002  
         _Read_Byte_25AA256 0788          ?_Read_Byte_25AA256 0071                   _data_read 0077  
       ??_Read_Byte_25AA256 0072   __end_of_Read_Byte_25AA256 07A3                    _PIR1bits 000C  
                  _SPI_Init 074D  __end_of_Write_Byte_25AA256 0788          SPI_Write_Data@data 0070  
   Write_Byte_25AA256@ADS_H 0073     Write_Byte_25AA256@ADS_L 0071               _SPI_Read_Data 0760  
